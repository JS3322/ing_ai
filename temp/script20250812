#!/bin/csh -f
# usage: link_public_assets.csh <BASE_DIR> <TODAY:YYYY-MM-DD>
# ex   : link_public_assets.csh /data/projects 2025-08-12
#
# 동작:
# - BASE_DIR 바로 아래의 디렉토리들을 확인
# - 생성일(birth time, %W) 없으면 수정시각(%Y)으로 대체
# - TODAY 이전에 만들어진 디렉토리들 각각의 내부에
#   "public_assets" 심볼릭 링크를 생성 (타겟은 그 디렉토리 자신)
#   => ln -s . public_assets  (상대경로 사용)

if ( $#argv != 2 ) then
  echo "Usage: $0 <BASE_DIR> <TODAY:YYYY-MM-DD>"
  exit 1
endif

set BASE_DIR  = "$1"
set TODAY_STR = "$2"

if ( ! -d "$BASE_DIR" ) then
  echo "ERROR: BASE_DIR not found: $BASE_DIR"
  exit 1
endif

# YYYY-MM-DD -> epoch(sec)
set TODAY_EPOCH = `date -d "$TODAY_STR" +%s 2>/dev/null`
if ( "$TODAY_EPOCH" == "" ) then
  echo "ERROR: Invalid TODAY (expect YYYY-MM-DD): $TODAY_STR"
  exit 1
endif

echo "[INFO] base_dir = $BASE_DIR"
echo "[INFO] today    = $TODAY_STR (epoch $TODAY_EPOCH)"
echo "----------------------------------------------"

# BASE_DIR 바로 아래 디렉토리만
foreach d ( `find "$BASE_DIR" -mindepth 1 -maxdepth 1 -type d | sort` )

  # 생성일(%W) → 없으면 수정시각(%Y)
  set BIRTH = `stat -c %W "$d" 2>/dev/null`
  if ( "$BIRTH" == "" ) set BIRTH = 0
  if ( $BIRTH <= 0 ) then
    set BIRTH = `stat -c %Y "$d" 2>/dev/null`
    if ( "$BIRTH" == "" ) set BIRTH = 0
  endif

  if ( $BIRTH < $TODAY_EPOCH ) then
    set LINK_PATH = "$d/public_assets"

    if ( -L "$LINK_PATH" ) then
      echo "[SKIP] symlink exists: $LINK_PATH"
    else if ( -e "$LINK_PATH" ) then
      echo "[SKIP] exists (not symlink): $LINK_PATH"
    else
      (cd "$d" && ln -s . public_assets)
      if ( $status == 0 ) then
        echo "[OK] $LINK_PATH -> $d"
      else
        echo "[ERR] Failed to create link in $d"
      endif
    endif
  endif
end







#!/bin/csh -f
# usage: link_public_assets.csh <BASE_DIR> <TODAY:YYYY-MM-DD>
# ex   : link_public_assets.csh /data/projects 2025-08-12

if ( $#argv != 2 ) then
  echo "Usage: $0 <BASE_DIR> <TODAY:YYYY-MM-DD>"
  exit 1
endif

set BASE_DIR  = "$1"
set TODAY_STR = "$2"

if ( ! -d "$BASE_DIR" ) then
  echo "ERROR: BASE_DIR not found: $BASE_DIR"
  exit 1
endif

# YYYY-MM-DD -> epoch (Linux/GNU date vs macOS/BSD date 둘 다 대응)
switch (`uname`)
  case "Linux":
    set TODAY_EPOCH = `date -d "$TODAY_STR" +%s 2>/dev/null`
    breaksw
  case "Darwin":
    set TODAY_EPOCH = `date -j -f "%Y-%m-%d" "$TODAY_STR" "+%s" 2>/dev/null`
    breaksw
  default:
    echo "ERROR: Unsupported OS: `uname`"
    exit 1
endsw
if ( "$TODAY_EPOCH" == "" ) then
  echo "ERROR: Invalid TODAY (expect YYYY-MM-DD): $TODAY_STR"
  exit 1
endif

echo "[INFO] base_dir=$BASE_DIR  today=$TODAY_STR (epoch $TODAY_EPOCH)"
setenv TODAY_EPOCH "$TODAY_EPOCH"

# 공백/한글 경로 안전 처리: -print0 | xargs -0
# 각 디렉토리 내부에 public_assets -> 그 디렉토리(자기 자신)를 가리키는 심볼릭 링크 생성
find "$BASE_DIR" -mindepth 1 -maxdepth 1 -type d -print0 | \
xargs -0 -I{} sh -c '
d="$1"

# birth time 우선 시도 (GNU: %W, BSD: %B), 없으면 mtime (GNU: %Y, BSD: %m)
birth=0
if b=$(stat -c %W "$d" 2>/dev/null) && [ "${b:-0}" -gt 0 ]; then
  birth="$b"
elif b=$(stat -f %B "$d" 2>/dev/null) && [ "${b:-0}" -gt 0 ]; then
  birth="$b"
elif b=$(stat -c %Y "$d" 2>/dev/null) 2>/dev/null; then
  birth="$b"
elif b=$(stat -f %m "$d" 2>/dev/null) 2>/dev/null; then
  birth="$b"
fi

# today 이전이면 링크 시도
if [ "$birth" -lt "$TODAY_EPOCH" ]; then
  link_path="$d/public_assets"
  # 자기 자신을 가리키게 하려면 절대경로 심볼릭 링크가 안전합니다.
  # (cd 필요 없이 동작, 공백 경로 안전)
  if [ -L "$link_path" ]; then
    echo "[SKIP] symlink exists: $link_path"
  elif [ -e "$link_path" ]; then
    echo "[SKIP] exists (not symlink): $link_path"
  else
    ln -s "$d" "$link_path"
    if [ $? -eq 0 ]; then
      echo "[OK] $link_path -> $d"
    else
      echo "[ERR] failed: $link_path -> $d"
    fi
  fi
fi
' sh {}






#!/bin/csh -f
# usage: link_public_assets.csh <BASE_DIR> <TODAY:YYYY-MM-DD>
# ex   : link_public_assets.csh /data/projects 2025-08-12

if ( $#argv != 2 ) then
  echo "Usage: $0 <BASE_DIR> <TODAY:YYYY-MM-DD>"
  exit 1
endif

set BASE_DIR  = "$1"
set TODAY_STR = "$2"

if ( ! -d "$BASE_DIR" ) then
  echo "ERROR: BASE_DIR not found: $BASE_DIR"
  exit 1
endif

# 당신이 말씀하신 형태 그대로 사용 (GNU date 가정)
set TODAY_EPOCH = `date -d "$TODAY_STR" + %s 2>/dev/null`
if ( "$TODAY_EPOCH" == "" ) then
  echo "ERROR: Invalid TODAY (expect YYYY-MM-DD): $TODAY_STR"
  exit 1
endif
setenv TODAY_EPOCH "$TODAY_EPOCH"

# 공백/한글 경로 안전 (-print0 / -0)
find "$BASE_DIR" -mindepth 1 -maxdepth 1 -type d -print0 | \
xargs -0 -I{} sh -c '
d="$1"

# 생성시각(%W) 없으면 수정시각(%Y)
b=$(stat -c %W "$d" 2>/dev/null) || b=0
[ -z "$b" ] && b=0
if [ "$b" -le 0 ]; then
  b=$(stat -c %Y "$d" 2>/dev/null) || b=0
fi

# 기준일 이전만 처리
if [ "$b" -lt "$TODAY_EPOCH" ]; then
  link="$d/public_assets"
  if [ -L "$link" ]; then
    : # 이미 심볼릭 링크면 무시 (필요시 갱신하려면 ln -sfn 사용)
  elif [ -e "$link" ]; then
    echo "[SKIP] exists (not symlink): $link"
  else
    ln -s "$d" "$link" && echo "[OK] $link -> $d" || echo "[ERR] $link"
  fi
fi
' sh {}






#!/bin/csh -f
# usage: link_public_assets.csh <BASE_DIR> <TODAY:YYYY-MM-DD>

if ( $#argv != 2 ) then
  echo "Usage: $0 <BASE_DIR> <TODAY:YYYY-MM-DD>"
  exit 1
endif

set BASE_DIR  = "$1"
set TODAY_STR = "$2"

if ( ! -d "$BASE_DIR" ) then
  echo "ERROR: BASE_DIR not found: $BASE_DIR"
  exit 1
endif

# 요청하신 형태 그대로 (리다이렉션 없음)
set TODAY_EPOCH = `date -d "$TODAY_STR" + %s`
if ( "$TODAY_EPOCH" == "" ) then
  echo "ERROR: Invalid TODAY (YYYY-MM-DD): $TODAY_STR"
  exit 1
endif
setenv TODAY_EPOCH "$TODAY_EPOCH"

# BASE_DIR 바로 아래 디렉토리만 처리(공백/한글 경로 안전)
find "$BASE_DIR" -mindepth 1 -maxdepth 1 -type d -print0 | \
xargs -0 -I{} sh -c '
d="$1"

# 생성시각(%W) 없으면 수정시각(%Y) 사용
b=$(stat -c %W "$d") || b=0
[ -z "$b" ] && b=0
if [ "$b" -le 0 ]; then
  b=$(stat -c %Y "$d") || b=0
fi

# 기준일 이전이면 public_assets -> 자기 자신 링크 생성
if [ "$b" -lt "$TODAY_EPOCH" ]; then
  link="$d/public_assets"
  if [ -L "$link" ]; then
    :
  elif [ -e "$link" ]; then
    :
  else
    ln -s "$d" "$link" || exit 1
  fi
fi
' sh {}